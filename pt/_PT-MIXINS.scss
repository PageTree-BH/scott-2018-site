

























// BREAKPOINT SIZER - USES SAME BREAKPOINTS AS DEFAULT BOOTSTRAP:
$xs: ( min:  300px );
$sm: ( min:  768px );
$md: ( min:  992px );
$lg: ( min: 1200px );
$xl: ( min: 1500px );

$xs-only: ( min: map-get($xs, min), max: map-get($sm, min) - 1 );
$sm-only: ( min: map-get($sm, min), max: map-get($md, min) - 1 );
$md-only: ( min: map-get($md, min), max: map-get($lg, min) - 1 );
$lg-only: ( min: map-get($lg, min), max: map-get($xl, min) - 1 );
$xl-only: ( min: map-get($xl, min) );



@mixin ptBreakpoint($map) {
  	$query: "";

  	@if map-has-key($map, min) {
  		$query: append($query, "(min-width: #{map-get($map, min)})")
  	}

	@if map-has-key($map, min) and map-has-key($map, max) {
		$query: append($query, "and")
	}

	@if map-has-key($map, max) {
		$query: append($query, "(max-width: #{map-get($map, max)})")
	}

  	@media screen and #{$query} { @content; }

}












@mixin ptPos($num) {
	display:flex;
	flex-direction:column;
	justify-content:center;
	// align-items:center;
	// height:100%;
	// width:100%;

	@if $num == 1 {
	    align-items: flex-start;
		justify-content:  flex-start;
		// text-align: left;
	}
	@if $num == 2 {
	    align-items: center;
		justify-content:  flex-start;
		// text-align: center;
	}
	@if $num == 3 {
	    align-items: flex-end;
		justify-content:  flex-start;
		// text-align: right;
	}
	@if $num == 4 {
	    align-items: flex-start;
		justify-content:  center;
		// text-align: left;
	}
	@if $num == 5 {
	    align-items: center;
		justify-content:  center;
		// text-align: center;
		// p{
			// text-align:left;
		// }
	}
	@if $num == 6 {
	    align-items: flex-end;
		justify-content:  center;
		// text-align: right;
	}
	@if $num == 7 {
	    align-items: flex-start;
		justify-content:  flex-end;
		// text-align: left;
	}
	@if $num == 8 {
	    align-items: center;
		justify-content:  flex-end;
		text-align: center;
		// text-align: right;
	}
	@if $num == 9 {
	    align-items: flex-end;
		justify-content:  flex-end;
		// text-align: right;
	}
}










@mixin ptZone($n){
	position:relative;
	width:100%;
	min-height:$n+vh;
	@include ptViewport(min-height, $n);
	// @include viewport-unit(height, $n+vh);
}










@mixin ptZoneColors ($bg, $h1, $p, $h3:$h1){

    background-color:$bg;

    color:$p;

    h1, h2{
        color:$h1;
    }
    h3, h4, h5{
        color:$h3;
    }
    p{
        color:$p;
    }

}











@mixin ptPadding($p:1em, $psm:2em, $pmd:3em, $plg:$pmd){

  padding:$p;

  @include ptBreakpoint($sm){
    padding:$psm;
  }

  @include ptBreakpoint($md){
    padding:$pmd;
  }

  @if($plg != null){
	@include ptBreakpoint($lg){
		padding:$plg;
	}
  }

}
























$zindex: (
  modal     : 9000,
  overlay   : 8000,
  dropdown  : 7000,
  header    : 6000,
  footer    : 5000
);

.header {
  z-index: map-get($zindex, header);
}
































/**
 * https://gist.github.com/BenMorel/e9e34c08360ebbbd0634
 *
 * Fix for vw, vh, vmin, vmax on iOS 7.
 * http://caniuse.com/#feat=viewport-units
 *
 * This fix works by replacing viewport units with px values on known screen sizes.
 *
 * iPhone 6 and 6 Plus cannot run iOS 7, so are not targeted by this fix.
 * Target devices running iOS 8+ will incidentally execute the media query,
 * but this will still produce the expected result; so this is not a problem.
 *
 * As an example, replace:
 *
 *   height: 50vh;
 *   font-size: 5vmin;
 *
 * with:
 *
 *   @include ptViewport(height, 50vh);
 *   @include ptViewport(font-size, 5vmin);
 */

@mixin ptViewport($property, $value) {
// @mixin viewport-unit($property, $value) {
  #{$property}: $value;

  $unit: unit($value);

  @if (index((vw, vh, vmin, vmax), $unit) != null) {
    $devices: (
      (768px, 1024px), // iPad (all versions)
      (320px, 480px),  // iPhone 4
      (320px, 568px)   // iPhone 5, 5C, 5S
    );

    @each $device in $devices {
      $device-width: nth($device, 1);
      $device-height: nth($device, 2);

      $device-query: "only screen and (-webkit-min-device-pixel-ratio: 1)";
      $device-query: "#{$device-query} and (device-width: #{$device-width})";
      $device-query: "#{$device-query} and (device-height: #{$device-height})";

      $percent: $value / ($value * 0 + 1); // see https://github.com/sass/sass/issues/533

      $percent-width: $device-width * $percent / 100;
      $percent-height: $device-height * $percent / 100;

      @if ($unit == vmin or $unit == vmax) {
        @media #{$device-query} {
          #{$property}: if($unit == vmin, $percent-width, $percent-height);
        }
      }
      @else {
        @media #{$device-query} and (orientation: portrait) {
          #{$property}: if($unit == vw, $percent-width, $percent-height);
        }

        @media #{$device-query} and (orientation: landscape) {
          #{$property}: if($unit == vw, $percent-height, $percent-width);
        }
      }
    }
  }
}
